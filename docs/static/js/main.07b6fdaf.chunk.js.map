{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,aAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACI,0BAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBS,SAAEP,GACnBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARvB,kBAYZL,GAZY,4CAAH,sDCAPQ,EAAc,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAML,EAAMM,IAAMP,IACvB,2BAAKA,KCDJQ,EAAU,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UAAgB,ECFd,SAAEA,GAAgB,IAAD,EAEfd,mBAAS,CAC/BqB,KAAK,GACLc,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAuBzC,OAhBAC,qBAAW,WACPzB,EAASC,GACJyB,MAAM,SAAAC,GAICH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAM1B,CAAErB,IAEEsB,EDnB0BK,CAAc3B,GAAlCc,EAFyB,EAE9BP,KAAac,EAFiB,EAEjBA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAsCjB,GAC9CqB,GAAW,uBAAGJ,UAAU,oCAAb,WACjB,yBAAKA,UAAU,aAEXH,EAAOL,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIkB,IAAMlB,EAAIC,IACLD,UEadmB,EA3BM,WAAO,IAAD,EAEW3C,mBAAS,CAAC,cAFrB,mBAEhBc,EAFgB,KAELf,EAFK,KAIvB,OACI,6BAEI,4CACA,6BAEA,kBAAC,EAAD,CAAaA,aAAeA,IAE5B,4BAEQe,EAAUS,KAAK,SAACT,EAAW8B,GAEvB,OAAO,kBAAC,EAAD,CACKF,IAAK5B,EACLA,UAAYA,UCjBhD+B,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.07b6fdaf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategoria }  ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategoria( cats => [ inputValue,...cats ] );\r\n            setInputValue('');\r\n        }        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategoria: PropTypes.func.isRequired\r\n    \r\n}","\r\n\r\nexport const getGifs = async( categoria ) => {\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=UoYKt97lY9rgmCUYt8xcSmlEJ7hRw8Pl`;\r\n    const resp = await fetch( URL );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ categoria }</h3>\r\n                { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img } />\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( categoria )\r\n            .then( imgs => {\r\n\r\n                /* setTimeout(() => { */\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                /* }, 3000); */\r\n                \r\n            });\r\n    }, [ categoria ]);\r\n\r\n    return state;\r\n};","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categoria, setCategoria] = useState(['One punch']);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n\r\n            <AddCategory setCategoria={ setCategoria } />\r\n\r\n            <ol>\r\n                { \r\n                    categoria.map( (categoria, i) => {\r\n                        /* return <li key={ categoria }> { categoria } </li> */\r\n                        return <GifGrid \r\n                                    key={categoria}\r\n                                    categoria={ categoria } \r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  \n  <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}